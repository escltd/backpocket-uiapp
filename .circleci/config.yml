version: 2.1

orbs:
  slack: circleci/slack@4.1
  

jobs:
  build-and-test-app:
    docker:
      - image: cimg/node:16.14.0
    steps:
        - checkout
        - run: 
            name: Install dependencies
            command: yarn install
        #sample commands to do formatting linting and testing for a golang
        #modify to cater for the specific technology stack
        #- run:
        #    name: Run gofmt for formatting
        #    command: gofmt -w *.go
        #- run:
        #    name: Run golint for linting
        #    command: golint models/ utils/ controllers/ testing/ .
        #- run:
        #    name: Run go vet analyzer
        #    command: go vet
        #- run:
        #    name: Run test
        #    command: cd testing && go test
        #- run:
        #    name: Run swag init to generate swagger docs
        #    command: swag init
        - run:
            name: Build app
            command: yarn build
            
        - slack/notify:
            event: fail
            channel: 'devops-notifications'
            template: basic_fail_1

        - slack/notify:
            event: pass
            channel: 'devops-notifications'
            template: basic_on_hold_1

  build-and-push-docker-image:
    parameters:
      environment:
        type: string
    docker:
      - image: cimg/base:2023.03
    steps:
      - checkout
      - setup_remote_docker
      - run: 
          name: Docker Login
          command: echo "$DOCKERHUB_PASSWORD" | docker login --username $DOCKERHUB_USERNAME --password-stdin
      
      # build the application image
      - run: 
          name: Docker Build
          command: docker build -t $DOCKERHUB_USERNAME/images:backpocket-uiapp-<<parameters.environment>> .

      # deploy the image
      - run: 
          name: Docker Deploy
          command: docker push $DOCKERHUB_USERNAME/images:backpocket-uiapp-<<parameters.environment>>

      - slack/notify:
          event: fail
          channel: 'devops-notifications'
          template: basic_fail_1

      - slack/notify:
          event: pass
          channel: 'devops-notifications'
          template: success_tagged_deploy_1

workflows:
  feature:
    when:
      not:
        equal: [main, <<pipeline.git.branch>>]
    jobs:
      - build-and-test-app:
          context:
            - docker
            - slack
      - hold-deploy-to-dev:
          type: approval
          requires:
            - build-and-test-app
      - hold-deploy-to-test:
          type: approval
          requires:
            - build-and-test-app
      - build-and-push-docker-image:
          name: deploy-to-dev
          context:
            - docker
            - slack
          requires:
            - hold-deploy-to-dev
          environment: dev
      - build-and-push-docker-image:
          name: deploy-to-test
          context:
            - docker
            - slack
          requires:
            - hold-deploy-to-test
          environment: test

  stage:
    when:
      equal: [main, <<pipeline.git.branch>>]
    jobs:
      - build-and-test-app:
          context:
            - docker
            - slack
      - build-and-push-docker-image:
          name: deploy-to-staging
          context:
            - docker
            - slack
          requires:
            - build-and-test-app
          environment: stage
      - hold-deploy-to-dev:
          type: approval
          requires:
            - build-and-test-app
      - hold-deploy-to-test:
          type: approval
          requires:
            - build-and-test-app
      - build-and-push-docker-image:
          name: deploy-to-dev
          context:
            - docker
            - slack
          requires:
            - hold-deploy-to-dev
          environment: dev
      - build-and-push-docker-image:
          name: deploy-to-test
          context:
            - docker
            - slack
          requires:
            - hold-deploy-to-test
          environment: test

  prod:
    jobs:
      - build-and-push-docker-image:
          name: deploy-to-prod
          context:
            - docker
            - slack
          environment: prod
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
